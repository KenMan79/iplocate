name: IpLocate Deploy

on:
  push:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  TF_VAR_geoip_account_id: ${{ secrets.TF_VAR_GEOIP_ACCOUNT_ID }}
  TF_VAR_geoip_license_key: ${{ secrets.TF_VAR_GEOIP_LICENSE_KEY }}
  TF_VAR_state_bucket: ${{ secrets.TF_VAR_STATE_BUCKET }}

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: hashicorp/setup-terraform@v1

      - name: Check Format
        run: terraform fmt -check -diff

      - name: Bootstrap
        run: ./bootstrap.sh

      - name: Init Terraform
        run: terraform init -input=false

      - name: Validate
        run: terraform validate

      - name: Deploy Infrastructure
        run: terraform apply -input=false -auto-approve

  deploy-backend:
    runs-on: ubuntu-latest
    needs:
      - deploy-infrastructure
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/setup-node@v2.1.1
        with:
          node-version: "12"
      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Deploy Backend
        run: npm run deploy

  deploy-frontend:
    runs-on: ubuntu-latest
    needs:
      - deploy-infrastructure
      - deploy-backend
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2.3.2
      - uses: actions/setup-node@v2.1.1
        with:
          node-version: "12"
      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy
        run: aws s3 sync build s3://iplocate-frontend --delete
